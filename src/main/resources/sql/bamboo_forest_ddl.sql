-- 테이블 삭제 (기존 테이블이 있을 경우 삭제)
DROP TABLE IF EXISTS chat_message CASCADE;
DROP TABLE IF EXISTS chat_room CASCADE;
DROP TABLE IF EXISTS chatbot_purchase CASCADE;
DROP TABLE IF EXISTS member CASCADE;
DROP TABLE IF EXISTS payment CASCADE;
DROP TABLE IF EXISTS refresh_token CASCADE;
DROP TABLE IF EXISTS oauth2_authorized_client CASCADE;

-- member 테이블 생성
CREATE TABLE member (
                        battery_count INTEGER NOT NULL,
                        created_at TIMESTAMP(6) NOT NULL,
                        member_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        modified_at TIMESTAMP(6) NOT NULL,
                        version BIGINT,
                        chat_bots VARCHAR(255) NOT NULL,
                        name VARCHAR(255) NOT NULL UNIQUE,
                        o_auth2 VARCHAR(255) NOT NULL CHECK (o_auth2 IN ('OAUTH2_KAKAO','OAUTH2_GITHUB')),
                        profile_image VARCHAR(255) NOT NULL,
                        role VARCHAR(255) NOT NULL CHECK (role IN ('ROLE_USER','ROLE_ADMIN')),
                        username VARCHAR(255) NOT NULL
);

-- chat_room 테이블 생성
CREATE TABLE chat_room (
                           chat_room_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           created_at TIMESTAMP(6) NOT NULL,
                           member_id BIGINT NOT NULL,
                           modified_at TIMESTAMP(6) NOT NULL,
                           chat_bot_item VARCHAR(255) NOT NULL CHECK (chat_bot_item IN ('UNCLE_CHATBOT','AUNT_CHATBOT','CHILD_CHATBOT')),
                           room_id VARCHAR(255) NOT NULL
);

-- chat_message 테이블 생성
CREATE TABLE chat_message (
                              chat_message_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              chat_room_id BIGINT NOT NULL,
                              created_at TIMESTAMP(6) NOT NULL,
                              member_id BIGINT NOT NULL,
                              modified_at TIMESTAMP(6) NOT NULL,
                              bot_message VARCHAR(255) NOT NULL,
                              chatbot_name VARCHAR(255) NOT NULL CHECK (chatbot_name IN ('UNCLE_CHATBOT','AUNT_CHATBOT','CHILD_CHATBOT')),
                              user_message VARCHAR(255) NOT NULL
);

-- chatbot_purchase 테이블 생성
CREATE TABLE chatbot_purchase (
                                  amount INTEGER NOT NULL,
                                  chatbot_purchase_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  created_at TIMESTAMP(6) NOT NULL,
                                  member_id BIGINT NOT NULL,
                                  modified_at TIMESTAMP(6) NOT NULL,
                                  chat_bot_item VARCHAR(255) NOT NULL CHECK (chat_bot_item IN ('UNCLE_CHATBOT','AUNT_CHATBOT','CHILD_CHATBOT'))
);

-- payment 테이블 생성
CREATE TABLE payment (
                         amount NUMERIC(38, 2),
                         created_at TIMESTAMP(6) NOT NULL,
                         member_id BIGINT NOT NULL,
                         modified_at TIMESTAMP(6) NOT NULL,
                         payment_id UUID NOT NULL PRIMARY KEY,
                         battery_item VARCHAR(255) NOT NULL CHECK (battery_item IN ('SMALL_BATTERY','MEDIUM_BATTERY','LARGE_BATTERY','SMALL_BATTERY_PACK','MEDIUM_BATTERY_PACK','LARGE_BATTERY_PACK')),
                         "key" VARCHAR(255) UNIQUE,
                         provider VARCHAR(255),
                         status VARCHAR(255) NOT NULL CHECK (status IN ('PENDING','COMPLETED'))
);

-- refresh_token 테이블 생성
CREATE TABLE refresh_token (
                               created_at TIMESTAMP(6) NOT NULL,
                               modified_at TIMESTAMP(6) NOT NULL,
                               refresh_token_id BIGINT NOT NULL PRIMARY KEY,
                               "value" VARCHAR(255) NOT NULL UNIQUE
);

-- oauth2_authorized_client 테이블 생성
CREATE TABLE oauth2_authorized_client (
                                          client_registration_id VARCHAR(100) NOT NULL,
                                          principal_name VARCHAR(200) NOT NULL,
                                          access_token_type VARCHAR(100) NOT NULL,
                                          access_token_value BYTEA NOT NULL,
                                          access_token_issued_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                          access_token_expires_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                          access_token_scopes VARCHAR(1000) DEFAULT NULL,
                                          refresh_token_value BYTEA DEFAULT NULL,
                                          refresh_token_issued_at TIMESTAMP WITHOUT TIME ZONE DEFAULT NULL,
                                          created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                                          PRIMARY KEY (client_registration_id, principal_name)
);

-- 인덱스 생성
CREATE INDEX idx_member_id_created_at ON chatbot_purchase (member_id, created_at);
CREATE INDEX idx_member_id_status_created_at ON payment (member_id, status, created_at);

-- 외래 키 제약 조건 추가
ALTER TABLE chat_message
    ADD CONSTRAINT FK_chat_message_chat_room_id
        FOREIGN KEY (chat_room_id)
            REFERENCES chat_room;

ALTER TABLE chat_message
    ADD CONSTRAINT FK_chat_message_member_id
        FOREIGN KEY (member_id)
            REFERENCES member;

ALTER TABLE chat_room
    ADD CONSTRAINT FK_chat_room_member_id
        FOREIGN KEY (member_id)
            REFERENCES member;

ALTER TABLE chatbot_purchase
    ADD CONSTRAINT FK_chatbot_purchase_member_id
        FOREIGN KEY (member_id)
            REFERENCES member;

ALTER TABLE payment
    ADD CONSTRAINT FK_payment_member_id
        FOREIGN KEY (member_id)
            REFERENCES member;
